/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
    TreeNode* reverseOddLevels(TreeNode* root) {
      bool flag = true;
      queue<TreeNode*>q;
      q.push( root);
   
      while( ! q.empty()){
        int n = q.size();
        vector<TreeNode*> ans(n);
        for( int i = 0 ; i < n ; i ++){
            TreeNode* node= q.front();
            q.pop();
            ans.push_back( node);
            if( node->left) q.push( node->left);
            if( node->right) q.push( node->right);
            if( !flag){
               ans[i]=node;
               if( i >= n/2)swap(ans[i]->val , ans[n-1-i]->val);        
            }

        }
       
         flag = !flag;
      }
      return root;
    }
};
