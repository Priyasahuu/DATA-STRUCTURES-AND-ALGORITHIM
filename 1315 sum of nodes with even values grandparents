/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumEvenGrandparent(TreeNode* root) {
      queue<TreeNode*>q;
      int sum=0;
      if( root==NULL)return sum;
      q.push( root);
      while(!q.empty()){
        TreeNode* node= q.front();
        q.pop();
        if( node-> val % 2==0) {
            if( node->left !=NULL){
                if( node->left->left != NULL){
                    sum +=node->left->left->val;
                }
                if( node->left->right  != NULL){
                    sum += node->left->right ->val;
                }
            }
            if( node-> right != NULL){
                if( node->right ->left!=NULL) {
                    sum += node->right->left ->val;   }             
            
            if( node->right->right !=NULL){
                sum += node->right->right->val;
            }
            }
        }
        
        if( node->left)q.push(node->left);
        if( node->right)q.push( node->right);
      }  
      return sum;
    }
};
