/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
bool f( TreeNode* l1 , TreeNode* r1){
    if( !l1 && !r1) return true;
    if( (!l1 || !r1) || (l1->val != r1 ->val))return false;
       return f(l1->left , r1->right ) && f( l1->right  ,r1->left);
}
    bool isSymmetric(TreeNode* root) {
      if(root==NULL)return true;
        return f( root->left , root->right) ;
    
    }
};
