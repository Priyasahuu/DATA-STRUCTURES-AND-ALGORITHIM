class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
     int n = image.size();
     int m = image[0].size();
     queue<pair<int, int>> q;
     int dx[]={0 , 0 , 1 , -1};
     int dy[]={ 1 , -1 , 0 ,0};
     int c= image[sr][sc];
    if( image[sr][sc] != color) image[sr][sc]=color;
    else{
        return image;
    }
     q.push({ sr , sc});
  while(!q.empty()){
  

        pair<int , int> p = q.front();
        q.pop();
        for( int j = 0 ; j < 4 ; j ++){
            int rx= p.first + dx[j];
            int cx= p.second + dy[j];
            if( rx >= 0 && rx < n && cx >= 0 && cx < m && image[rx][cx]==c ){
                image[rx][cx]=color;
                q.push({ rx , cx});
                }

        }
    }

     return image;

    }
};
