/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
    // i guess level order traversal me first node will be the answer
 queue<TreeNode* > q;
 q.push( root);
 int ans= 0;
    while(!q.empty()){
       int  n = q.size();
        for( int i = 0 ; i  < n ; i ++){
            if( i==0){
                ans= q.front()->val;
                
            }
            TreeNode* node= q.front();
            if( node->left){
                q.push( node->left);

            }
            if( node->right)q.push( node->right);
            q.pop();
        }

     }
     return ans;
    }
};
