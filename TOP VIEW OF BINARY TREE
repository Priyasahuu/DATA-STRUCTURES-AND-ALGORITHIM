/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution {
  public:
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    vector<int> topView(Node *root) {
        
      vector<int> ans;
      if(root ==nullptr) return ans;
      queue<pair<  Node*,int>> q;
      map<int , int> mpp;
      q.push({ root , 0});
      while(!q.empty()){
          auto node = q.front();
          q.pop();
          Node* nodes =  node.first;
          int index=node.second;
         if( mpp.find(index)== mpp.end()){
             mpp[index]=nodes->data;
         }
         if(nodes->left){
             q.push({nodes->left ,index-1 });
         }
         if(nodes->right){
             q.push({ nodes->right , index+1});
         }
      }
      for(auto it: mpp){
          ans.push_back(it.second);
      }
    return ans;    // code here
    }
};
