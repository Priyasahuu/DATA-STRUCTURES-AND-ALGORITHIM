/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
       vector<vector<int>>ans;
       if(root ==NULL)return ans;
       queue<TreeNode*>q;

       q.push(root);
       bool flag=true;
      
       
         while(!q.empty()){
            int n = q.size();
            vector<int>s(n);
          if( flag==true) { 
            for( int i =0 ; i  < n  ; i ++){
             TreeNode* node= q.front();
                q.pop();
                s[i]=node->val;
                if(node->left)q.push(node->left);
                if(node->right)q.push(node->right);

                   

            }
            flag=false;
            }
            else{
                 for( int i =n-1 ; i  >=0  ; i --){
               TreeNode* node= q.front();
                q.pop();
                s[i]=node->val;
                if(node->left)q.push(node->left);
                if(node->right)q.push(node->right);

                   

            }
            flag=true;

            }
            ans.push_back(s);

         }
       
       return ans;
    }
};
