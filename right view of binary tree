/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        map<int , int> mpp;
        queue<pair<TreeNode* , int>> q;
        vector<int> ans;
        if( root==NULL)return ans;
        q.push({ root , 0});
        while(!q.empty()){
            auto it = q.front();
            q.pop();
            TreeNode* node= it.first;
            int line= it.second;
            if( mpp.find(line)== mpp.end()){
            mpp[line]= node->val;
            }
            if( root ->right){
                q.push( { root->right , line +1});
            }
        }
        for( auto p : mpp){
            ans.push_back( p.second);
        }
        return ans;
    }
};
