/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
      pair<TreeNode* , int> f( TreeNode* root){
        if( root ==NULL){
            return { NULL , 0};
        }
        if( root->left ==NULL && root->right ==NULL){
            if( root->val ==0){
                return { NULL , 0};
            }
            return { root , 1};
        }
        pair<TreeNode*, int> p= f( root->left);
        root->left= p.first;
        pair<TreeNode* , int> q= f( root->right);
        root->right = q.first;
        if( p.second== 1|| q.second ==1 || root->val==1){
            return { root , 1};
        }
        return {NULL , 0};
      }
    TreeNode* pruneTree(TreeNode* root) {
        pair<TreeNode* , int> p= f( root);
        return p.first;
    }
};
