/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
  
    TreeNode*  f(vector<int>&nums ,  int start , int end){
        if( start >= end)return nullptr;
          int maxi= INT_MIN;
          
          int index;
          for( int i = start ; i  < end ; i ++){
           if( nums[i]> maxi){
            maxi= nums[i];
            index= i;
           }
          }
           TreeNode* root= new TreeNode( maxi);
  
         
          
         root->left =   f( nums ,start , index);
         
         root->right =   f(nums , index+1 , end );
           

     return root;


    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
  
       
        int start=0;
        int end=nums.size();
    return f(  nums , start ,end);
     
    }
};
